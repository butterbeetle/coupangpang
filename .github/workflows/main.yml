name: deploy # Workflow 이름
on: # Event 감지
  push:
    branches:
      - main
jobs: # Job 설정
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
        # Github Repository Secrets를 통해 환경 변수 파일을 생성합니다.
      - name: Generate Environment Variables File for Production
        run: |
          echo "REACT_APP_APIKEY=$REACT_APP_APIKEY" >> .env.production
          echo "REACT_APP_AUTH_DOMAIN=$REACT_APP_AUTH_DOMAIN" >> .env.production
          echo "REACT_APP_PROJECT_ID=$REACT_APP_PROJECT_ID" >> .env.production
          echo "REACT_APP_STORAGE_BUCKET=$REACT_APP_STORAGE_BUCKET" >> .env.production
          echo "REACT_APP_MESSAGIN_ID=$REACT_APP_MESSAGIN_ID" >> .env.production
          echo "REACT_APP_APP_ID=$REACT_APP_APP_ID" >> .env.production
        env:
          REACT_APP_APIKEY: ${{secrets.REACT_APP_APIKEY}}
          REACT_APP_AUTH_DOMAIN: ${{secrets.REACT_APP_AUTH_DOMAIN}}
          REACT_APP_PROJECT_ID: ${{secrets.REACT_APP_PROJECT_ID}}
          REACT_APP_STORAGE_BUCKET: ${{secrets.REACT_APP_STORAGE_BUCKET}}
          REACT_APP_MESSAGIN_ID: ${{secrets.REACT_APP_MESSAGIN_ID}}
          REACT_APP_APP_ID: ${{secrets.REACT_APP_APP_ID}}

      - name: Install Dependencies # 의존 파일 설치
        run: npm install

      - name: Build # React Build
        run: npm run build

      - name: Deploy # Upload build file to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SECRET_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp --recursive --region ap-northeast-2 build s3://butterbeetle-coupang
